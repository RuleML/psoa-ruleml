Document
(
  Prefix(: <http://psoa.ruleml.org/lib/phys#>)
  Prefix(xsb: <http://xsb.sourceforge.net/manual1/manual1.pdf#>)
  Prefix(pred: <http://www.w3.org/2007/rif-builtin-predicate#>)
  Prefix(func: <http://www.w3.org/2007/rif-builtin-function#>)
  
  Group
  (
    % Wellformedness-checking (Yes/error-yielding) predicates
    
    Forall ?x (
      :tryInteger(?x) :- 
        ? = External(func:numeric-integer-divide(?x 1))  % Workaround for raising an exception for non-integers 
    )
    Forall ?year ?month ?day (
      :tryDate(:date(?year ?month ?day)) :- And(:tryYear(?year) :tryMonth(?month) :tryDay(?day))
    )
    Forall ?hour ?minute ?second (
      :tryTime(:time(?hour ?minute ?second)) :- And(:tryHour(?hour) :tryMinute(?minute) :trySecond(?second))
    )
    Forall ?year ?month ?day ?hour ?minute ?second (
      :tryDatetime(:datetime(?year ?month ?day ?hour ?minute ?second)) :- And(:tryDate(:date(?year ?month ?day)) :tryTime(:time(?hour ?minute ?second)))
    )
    Forall ?year (
      :tryYear(?year) :- :tryInteger(?year)
    )
    Forall ?month (
      :tryMonth(?month) :- :tryInteger(?month)
    )
    Forall ?day (
      :tryDay(?day) :- :tryInteger(?day)
    )
    Forall ?hour (
      :tryHour(?hour) :- :tryInteger(?hour)
    )
    Forall ?minute (
      :tryMinute(?minute) :- :tryInteger(?minute)
    )
    Forall ?second (
      :trySecond(?second) :- :tryInteger(?second)
    )


    
    % Date/Time-yielding predicates
    
    Forall ?year ?month ?day ?hour ?minute ?second (
      :currentDatetime(:datetime(?year ?month ?day ?hour ?minute ?second)) :- 
        External(xsb:local_datime(xsb:datime(?year ?month ?day ?hour ?minute ?second)))
    )
    
    Forall ?year ?month ?day ?hour ?minute ?second (
      :currentDatetimeUTC(:datetime(?year ?month ?day ?hour ?minute ?second)) :- 
        External(xsb:datime(xsb:datime(?year ?month ?day ?hour ?minute ?second)))
    )
    
    Forall ?year ?month ?day ?hour ?minute ?second (
      :currentDate(:date(?year ?month ?day)) :-
        :currentDatetime(:datetime(?year ?month ?day ?hour ?minute ?second))
    )    
    
    Forall ?year ?month ?day ?hour ?minute ?second (
      :currentDateUTC(:date(?year ?month ?day)) :-
        :currentDatetimeUTC(:datetime(?year ?month ?day ?hour ?minute ?second))
    ) 

    Forall ?year ?month ?day ?hour ?minute ?second (
      :currentTime(:time(?hour ?minute ?second)) :-
        :currentDatetime(:datetime(?year ?month ?day ?hour ?minute ?second))
    )  
    
    Forall ?year ?month ?day ?hour ?minute ?second (
      :currentTimeUTC(:time(?hour ?minute ?second)) :-
        :currentDatetimeUTC(:datetime(?year ?month ?day ?hour ?minute ?second))
    )
    
    
    
    % Date-comparison predicates
    
    Forall ?year1 ?month1 ?day1 ?year2 ?month2 ?day2 (
      :lessThanDate(:date(?year1 ?month1 ?day1) :date(?year2 ?month2 ?day2)) :-
        And(:tryDate(:date(?year1 ?month1 ?day1))
            :tryDate(:date(?year2 ?month2 ?day2))
            Or(External(pred:numeric-less-than(?year1 ?year2))
               And(External(pred:numeric-equal(?year1 ?year2))
                   Or(External(pred:numeric-less-than(?month1 ?month2))
                      And(External(pred:numeric-equal(?month1 ?month2))
                          External(pred:numeric-less-than(?day1 ?day2)))))))
    )
    
    Forall ?year1 ?month1 ?day1 ?year2 ?month2 ?day2 (
      :lessEqDate(:date(?year1 ?month1 ?day1) :date(?year2 ?month2 ?day2)) :-
        And(:tryDate(:date(?year1 ?month1 ?day1))
            :tryDate(:date(?year2 ?month2 ?day2))
            Or(External(pred:numeric-less-than(?year1 ?year2))          % numeric-less-than, without -or-equal, since, for -equal, ...
               And(External(pred:numeric-equal(?year1 ?year2))
                   Or(External(pred:numeric-less-than(?month1 ?month2)) % ... ?month1/?day1 could be numeric-greater-than ?month2/?day2
                      And(External(pred:numeric-equal(?month1 ?month2))
                          External(pred:numeric-less-than-or-equal(?day1 ?day2)))))))
    )
    
    Forall ?year1 ?month1 ?day1 ?year2 ?month2 ?day2 (
      :greaterThanDate(:date(?year1 ?month1 ?day1) :date(?year2 ?month2 ?day2)) :-
        And(:tryDate(:date(?year1 ?month1 ?day1))
            :tryDate(:date(?year2 ?month2 ?day2))
            Or(External(pred:numeric-greater-than(?year1 ?year2))
               And(External(pred:numeric-equal(?year1 ?year2))
                   Or(External(pred:numeric-greater-than(?month1 ?month2))
                      And(External(pred:numeric-equal(?month1 ?month2))
                          External(pred:numeric-greater-than(?day1 ?day2)))))))
    )
    
    Forall ?year1 ?month1 ?day1 ?year2 ?month2 ?day2 (
      :greaterEqDate(:date(?year1 ?month1 ?day1) :date(?year2 ?month2 ?day2)) :-
        And(:tryDate(:date(?year1 ?month1 ?day1))
            :tryDate(:date(?year2 ?month2 ?day2))
            Or(External(pred:numeric-greater-than(?year1 ?year2))          % numeric-greater-than, without -or-equal, since, for -equal, ...
               And(External(pred:numeric-equal(?year1 ?year2))
                   Or(External(pred:numeric-greater-than(?month1 ?month2)) % ... ?month1/?day1 could be numeric-less-than ?month2/?day2
                      And(External(pred:numeric-equal(?month1 ?month2))
                          External(pred:numeric-greater-than-or-equal(?day1 ?day2)))))))
    )
    
    Forall ?year1 ?month1 ?day1 ?year2 ?month2 ?day2 (
      :eqDate(:date(?year1 ?month1 ?day1) :date(?year2 ?month2 ?day2)) :-
        And(:tryDate(:date(?year1 ?month1 ?day1))
            :tryDate(:date(?year2 ?month2 ?day2))
            External(pred:numeric-equal(?year1 ?year2))
            External(pred:numeric-equal(?month1 ?month2))
            External(pred:numeric-equal(?day1 ?day2)))
    )
    
    
        
    % Time-comparison predicates
    
    Forall ?hour1 ?minute1 ?second1 ?hour2 ?minute2 ?second2 (
      :lessThanTime(:time(?hour1 ?minute1 ?second1) :time(?hour2 ?minute2 ?second2)) :-
        And(:tryTime(:time(?hour1 ?minute1 ?second1))
            :tryTime(:time(?hour2 ?minute2 ?second2))
            Or(External(pred:numeric-less-than(?hour1 ?hour2))
               And(External(pred:numeric-equal(?hour1 ?hour2))
                   Or(External(pred:numeric-less-than(?minute1 ?minute2))
                      And(External(pred:numeric-equal(?minute1 ?minute2))
                          External(pred:numeric-less-than(?second1 ?second2)))))))
    )
    
    Forall ?hour1 ?minute1 ?second1 ?hour2 ?minute2 ?second2 (
      :lessEqTime(:time(?hour1 ?minute1 ?second1) :time(?hour2 ?minute2 ?second2)) :-
        And(:tryTime(:time(?hour1 ?minute1 ?second1))
            :tryTime(:time(?hour2 ?minute2 ?second2))
            Or(External(pred:numeric-less-than(?hour1 ?hour2))            % numeric-less-than, without -or-equal, since, for -equal, ...
               And(External(pred:numeric-equal(?hour1 ?hour2))
                   Or(External(pred:numeric-less-than(?minute1 ?minute2)) % ... ?minute1/?second1 could be numeric-greater-than ?minute2/?second2
                      And(External(pred:numeric-equal(?minute1 ?minute2))
                          External(pred:numeric-less-than-or-equal(?second1 ?second2)))))))
    )
    
    Forall ?hour1 ?minute1 ?second1 ?hour2 ?minute2 ?second2 (
      :greaterThanTime(:time(?hour1 ?minute1 ?second1) :time(?hour2 ?minute2 ?second2)) :-
        And(:tryTime(:time(?hour1 ?minute1 ?second1))
            :tryTime(:time(?hour2 ?minute2 ?second2))
            Or(External(pred:numeric-greater-than(?hour1 ?hour2))
               And(External(pred:numeric-equal(?hour1 ?hour2))
                   Or(External(pred:numeric-greater-than(?minute1 ?minute2))
                      And(External(pred:numeric-equal(?minute1 ?minute2))
                          External(pred:numeric-greater-than(?second1 ?second2)))))))
    )
    
    Forall ?hour1 ?minute1 ?second1 ?hour2 ?minute2 ?second2 (
      :greaterEqTime(:time(?hour1 ?minute1 ?second1) :time(?hour2 ?minute2 ?second2)) :-
        And(:tryTime(:time(?hour1 ?minute1 ?second1))
            :tryTime(:time(?hour2 ?minute2 ?second2))
            Or(External(pred:numeric-greater-than(?hour1 ?hour2))            % numeric-greater-than, without -or-equal, since, for -equal, ...
               And(External(pred:numeric-equal(?hour1 ?hour2))
                   Or(External(pred:numeric-greater-than(?minute1 ?minute2)) % ... ?minute1/?second1 could be numeric-less-than ?minute2/?second2
                      And(External(pred:numeric-equal(?minute1 ?minute2))
                          External(pred:numeric-greater-than-or-equal(?second1 ?second2)))))))
    )
    
    Forall ?hour1 ?minute1 ?second1 ?hour2 ?minute2 ?second2 (
      :eqTime(:time(?hour1 ?minute1 ?second1) :time(?hour2 ?minute2 ?second2)) :-
        And(:tryTime(:time(?hour1 ?minute1 ?second1))
            :tryTime(:time(?hour2 ?minute2 ?second2))
            External(pred:numeric-equal(?hour1 ?hour2))
            External(pred:numeric-equal(?minute1 ?minute2))
            External(pred:numeric-equal(?second1 ?second2)))
    )
    
    
        
    % Datetime-comparison predicates
    % Top-level wellformedness checks with :tryDatetime for early detection of type/format violation
    
    Forall ?year1 ?month1 ?day1 ?hour1 ?minute1 ?second1 ?year2 ?month2 ?day2 ?hour2 ?minute2 ?second2 (
      :lessThanDatetime(:datetime(?year1 ?month1 ?day1 ?hour1 ?minute1 ?second1) :datetime(?year2 ?month2 ?day2 ?hour2 ?minute2 ?second2)) :-
        And(:tryDatetime(:datetime(?year1 ?month1 ?day1 ?hour1 ?minute1 ?second1))
            :tryDatetime(:datetime(?year2 ?month2 ?day2 ?hour2 ?minute2 ?second2))
            Or(:lessThanDate(:date(?year1 ?month1 ?day1) :date(?year2 ?month2 ?day2))
               And(:eqDate(:date(?year1 ?month1 ?day1) :date(?year2 ?month2 ?day2))
                   :lessThanTime(:time(?hour1 ?minute1 ?second1) :time(?hour2 ?minute2 ?second2)))))            
    )
    
    Forall ?year1 ?month1 ?day1 ?hour1 ?minute1 ?second1 ?year2 ?month2 ?day2 ?hour2 ?minute2 ?second2 (
      :lessEqDatetime(:datetime(?year1 ?month1 ?day1 ?hour1 ?minute1 ?second1) :datetime(?year2 ?month2 ?day2 ?hour2 ?minute2 ?second2)) :-
        And(:tryDatetime(:datetime(?year1 ?month1 ?day1 ?hour1 ?minute1 ?second1))
            :tryDatetime(:datetime(?year2 ?month2 ?day2 ?hour2 ?minute2 ?second2))
            Or(:lessThanDate(:date(?year1 ?month1 ?day1) :date(?year2 ?month2 ?day2))
               And(:eqDate(:date(?year1 ?month1 ?day1) :date(?year2 ?month2 ?day2))
                   :lessEqTime(:time(?hour1 ?minute1 ?second1) :time(?hour2 ?minute2 ?second2)))))          
    )
    
    Forall ?year1 ?month1 ?day1 ?hour1 ?minute1 ?second1 ?year2 ?month2 ?day2 ?hour2 ?minute2 ?second2 (
      :greaterThanDatetime(:datetime(?year1 ?month1 ?day1 ?hour1 ?minute1 ?second1) :datetime(?year2 ?month2 ?day2 ?hour2 ?minute2 ?second2)) :-
        And(:tryDatetime(:datetime(?year1 ?month1 ?day1 ?hour1 ?minute1 ?second1))
            :tryDatetime(:datetime(?year2 ?month2 ?day2 ?hour2 ?minute2 ?second2))
            Or(:greaterThanDate(:date(?year1 ?month1 ?day1) :date(?year2 ?month2 ?day2))
               And(:eqDate(:date(?year1 ?month1 ?day1) :date(?year2 ?month2 ?day2))
                   :greaterThanTime(:time(?hour1 ?minute1 ?second1) :time(?hour2 ?minute2 ?second2)))))
            
    )
    
    Forall ?year1 ?month1 ?day1 ?hour1 ?minute1 ?second1 ?year2 ?month2 ?day2 ?hour2 ?minute2 ?second2 (
      :greaterEqDatetime(:datetime(?year1 ?month1 ?day1 ?hour1 ?minute1 ?second1) :datetime(?year2 ?month2 ?day2 ?hour2 ?minute2 ?second2)) :-
        And(:tryDatetime(:datetime(?year1 ?month1 ?day1 ?hour1 ?minute1 ?second1))
            :tryDatetime(:datetime(?year2 ?month2 ?day2 ?hour2 ?minute2 ?second2))
            Or(:greaterThanDate(:date(?year1 ?month1 ?day1) :date(?year2 ?month2 ?day2))
               And(:eqDate(:date(?year1 ?month1 ?day1) :date(?year2 ?month2 ?day2))
                   :greaterEqTime(:time(?hour1 ?minute1 ?second1) :time(?hour2 ?minute2 ?second2)))))
            
    )
    
    Forall ?year1 ?month1 ?day1 ?hour1 ?minute1 ?second1 ?year2 ?month2 ?day2 ?hour2 ?minute2 ?second2 (
      :eqDatetime(:datetime(?year1 ?month1 ?day1 ?hour1 ?minute1 ?second1) :datetime(?year2 ?month2 ?day2 ?hour2 ?minute2 ?second2)) :-
        And(:tryDatetime(:datetime(?year1 ?month1 ?day1 ?hour1 ?minute1 ?second1))
            :tryDatetime(:datetime(?year2 ?month2 ?day2 ?hour2 ?minute2 ?second2))
            :eqDate(:date(?year1 ?month1 ?day1) :date(?year2 ?month2 ?day2))
            :eqTime(:time(?hour1 ?minute1 ?second1) :time(?hour2 ?minute2 ?second2)))       
    )   
  )
)
